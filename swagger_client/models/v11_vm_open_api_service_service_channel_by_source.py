# coding: utf-8

"""
    PTV Open Api version 11

    Here you can see listed all the PTV Open Api methods.  # noqa: E501

    OpenAPI spec version: v11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V11VmOpenApiServiceServiceChannelBySource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'service_channel_source_id': 'str',
        'description': 'list[VmOpenApiLocalizedListItem]',
        'service_charge_type': 'str',
        'service_hours': 'list[V11VmOpenApiServiceHour]',
        'contact_details': 'V9VmOpenApiContactDetailsInBase',
        'delete_service_charge_type': 'bool',
        'delete_all_descriptions': 'bool',
        'delete_all_service_hours': 'bool'
    }

    attribute_map = {
        'service_channel_source_id': 'serviceChannelSourceId',
        'description': 'description',
        'service_charge_type': 'serviceChargeType',
        'service_hours': 'serviceHours',
        'contact_details': 'contactDetails',
        'delete_service_charge_type': 'deleteServiceChargeType',
        'delete_all_descriptions': 'deleteAllDescriptions',
        'delete_all_service_hours': 'deleteAllServiceHours'
    }

    def __init__(self, service_channel_source_id=None, description=None, service_charge_type=None, service_hours=None, contact_details=None, delete_service_charge_type=None, delete_all_descriptions=None, delete_all_service_hours=None):  # noqa: E501
        """V11VmOpenApiServiceServiceChannelBySource - a model defined in Swagger"""  # noqa: E501
        self._service_channel_source_id = None
        self._description = None
        self._service_charge_type = None
        self._service_hours = None
        self._contact_details = None
        self._delete_service_charge_type = None
        self._delete_all_descriptions = None
        self._delete_all_service_hours = None
        self.discriminator = None
        self.service_channel_source_id = service_channel_source_id
        if description is not None:
            self.description = description
        if service_charge_type is not None:
            self.service_charge_type = service_charge_type
        if service_hours is not None:
            self.service_hours = service_hours
        if contact_details is not None:
            self.contact_details = contact_details
        if delete_service_charge_type is not None:
            self.delete_service_charge_type = delete_service_charge_type
        if delete_all_descriptions is not None:
            self.delete_all_descriptions = delete_all_descriptions
        if delete_all_service_hours is not None:
            self.delete_all_service_hours = delete_all_service_hours

    @property
    def service_channel_source_id(self):
        """Gets the service_channel_source_id of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        The external source id for service channel.  # noqa: E501

        :return: The service_channel_source_id of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: str
        """
        return self._service_channel_source_id

    @service_channel_source_id.setter
    def service_channel_source_id(self, service_channel_source_id):
        """Sets the service_channel_source_id of this V11VmOpenApiServiceServiceChannelBySource.

        The external source id for service channel.  # noqa: E501

        :param service_channel_source_id: The service_channel_source_id of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: str
        """
        if service_channel_source_id is None:
            raise ValueError("Invalid value for `service_channel_source_id`, must not be `None`")  # noqa: E501

        self._service_channel_source_id = service_channel_source_id

    @property
    def description(self):
        """Gets the description of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        List of localized service channel relationship descriptions. Possible type values are: Description, ChargeTypeAdditionalInfo. (Max.Length: 500 Description). (Max.Length: 500 ChargeTypeAdditionalInfo).  # noqa: E501

        :return: The description of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: list[VmOpenApiLocalizedListItem]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V11VmOpenApiServiceServiceChannelBySource.

        List of localized service channel relationship descriptions. Possible type values are: Description, ChargeTypeAdditionalInfo. (Max.Length: 500 Description). (Max.Length: 500 ChargeTypeAdditionalInfo).  # noqa: E501

        :param description: The description of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: list[VmOpenApiLocalizedListItem]
        """

        self._description = description

    @property
    def service_charge_type(self):
        """Gets the service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        Service charge type. Possible values are: Chargeable, FreeOfCharge or Other  # noqa: E501

        :return: The service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: str
        """
        return self._service_charge_type

    @service_charge_type.setter
    def service_charge_type(self, service_charge_type):
        """Sets the service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.

        Service charge type. Possible values are: Chargeable, FreeOfCharge or Other  # noqa: E501

        :param service_charge_type: The service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: str
        """

        self._service_charge_type = service_charge_type

    @property
    def service_hours(self):
        """Gets the service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        List of connection related service hours.  # noqa: E501

        :return: The service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: list[V11VmOpenApiServiceHour]
        """
        return self._service_hours

    @service_hours.setter
    def service_hours(self, service_hours):
        """Sets the service_hours of this V11VmOpenApiServiceServiceChannelBySource.

        List of connection related service hours.  # noqa: E501

        :param service_hours: The service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: list[V11VmOpenApiServiceHour]
        """

        self._service_hours = service_hours

    @property
    def contact_details(self):
        """Gets the contact_details of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501


        :return: The contact_details of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: V9VmOpenApiContactDetailsInBase
        """
        return self._contact_details

    @contact_details.setter
    def contact_details(self, contact_details):
        """Sets the contact_details of this V11VmOpenApiServiceServiceChannelBySource.


        :param contact_details: The contact_details of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: V9VmOpenApiContactDetailsInBase
        """

        self._contact_details = contact_details

    @property
    def delete_service_charge_type(self):
        """Gets the delete_service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        Indicates if value for property ServiceChargeType should be deleted.  # noqa: E501

        :return: The delete_service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: bool
        """
        return self._delete_service_charge_type

    @delete_service_charge_type.setter
    def delete_service_charge_type(self, delete_service_charge_type):
        """Sets the delete_service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.

        Indicates if value for property ServiceChargeType should be deleted.  # noqa: E501

        :param delete_service_charge_type: The delete_service_charge_type of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: bool
        """

        self._delete_service_charge_type = delete_service_charge_type

    @property
    def delete_all_descriptions(self):
        """Gets the delete_all_descriptions of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        Indicates if all descriptions should be deleted.  # noqa: E501

        :return: The delete_all_descriptions of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_descriptions

    @delete_all_descriptions.setter
    def delete_all_descriptions(self, delete_all_descriptions):
        """Sets the delete_all_descriptions of this V11VmOpenApiServiceServiceChannelBySource.

        Indicates if all descriptions should be deleted.  # noqa: E501

        :param delete_all_descriptions: The delete_all_descriptions of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: bool
        """

        self._delete_all_descriptions = delete_all_descriptions

    @property
    def delete_all_service_hours(self):
        """Gets the delete_all_service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501

        Gets or sets a value indicating whether all service hours should be deleted.  # noqa: E501

        :return: The delete_all_service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_service_hours

    @delete_all_service_hours.setter
    def delete_all_service_hours(self, delete_all_service_hours):
        """Sets the delete_all_service_hours of this V11VmOpenApiServiceServiceChannelBySource.

        Gets or sets a value indicating whether all service hours should be deleted.  # noqa: E501

        :param delete_all_service_hours: The delete_all_service_hours of this V11VmOpenApiServiceServiceChannelBySource.  # noqa: E501
        :type: bool
        """

        self._delete_all_service_hours = delete_all_service_hours

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V11VmOpenApiServiceServiceChannelBySource, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V11VmOpenApiServiceServiceChannelBySource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
