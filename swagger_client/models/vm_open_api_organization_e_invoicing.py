# coding: utf-8

"""
    PTV Open Api version 11

    Here you can see listed all the PTV Open Api methods.  # noqa: E501

    OpenAPI spec version: v11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class VmOpenApiOrganizationEInvoicing(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'operator_code': 'str',
        'electronic_invoicing_address': 'str',
        'additional_information': 'list[VmOpenApiLanguageItem]',
        'owner_reference_id': 'str'
    }

    attribute_map = {
        'id': 'id',
        'operator_code': 'operatorCode',
        'electronic_invoicing_address': 'electronicInvoicingAddress',
        'additional_information': 'additionalInformation',
        'owner_reference_id': 'ownerReferenceId'
    }

    def __init__(self, id=None, operator_code=None, electronic_invoicing_address=None, additional_information=None, owner_reference_id=None):  # noqa: E501
        """VmOpenApiOrganizationEInvoicing - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._operator_code = None
        self._electronic_invoicing_address = None
        self._additional_information = None
        self._owner_reference_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if operator_code is not None:
            self.operator_code = operator_code
        if electronic_invoicing_address is not None:
            self.electronic_invoicing_address = electronic_invoicing_address
        if additional_information is not None:
            self.additional_information = additional_information
        if owner_reference_id is not None:
            self.owner_reference_id = owner_reference_id

    @property
    def id(self):
        """Gets the id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501

        Gets or sets the identifier.  # noqa: E501

        :return: The id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VmOpenApiOrganizationEInvoicing.

        Gets or sets the identifier.  # noqa: E501

        :param id: The id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def operator_code(self):
        """Gets the operator_code of this VmOpenApiOrganizationEInvoicing.  # noqa: E501

        Operator code. (Max.Length: 110).  # noqa: E501

        :return: The operator_code of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :rtype: str
        """
        return self._operator_code

    @operator_code.setter
    def operator_code(self, operator_code):
        """Sets the operator_code of this VmOpenApiOrganizationEInvoicing.

        Operator code. (Max.Length: 110).  # noqa: E501

        :param operator_code: The operator_code of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :type: str
        """

        self._operator_code = operator_code

    @property
    def electronic_invoicing_address(self):
        """Gets the electronic_invoicing_address of this VmOpenApiOrganizationEInvoicing.  # noqa: E501

        Electronic invoicing address (Max.Length: 110).  # noqa: E501

        :return: The electronic_invoicing_address of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :rtype: str
        """
        return self._electronic_invoicing_address

    @electronic_invoicing_address.setter
    def electronic_invoicing_address(self, electronic_invoicing_address):
        """Sets the electronic_invoicing_address of this VmOpenApiOrganizationEInvoicing.

        Electronic invoicing address (Max.Length: 110).  # noqa: E501

        :param electronic_invoicing_address: The electronic_invoicing_address of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :type: str
        """

        self._electronic_invoicing_address = electronic_invoicing_address

    @property
    def additional_information(self):
        """Gets the additional_information of this VmOpenApiOrganizationEInvoicing.  # noqa: E501

        Localized list of additional information for electronic invoicing address. (Max.Length: 150).  # noqa: E501

        :return: The additional_information of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this VmOpenApiOrganizationEInvoicing.

        Localized list of additional information for electronic invoicing address. (Max.Length: 150).  # noqa: E501

        :param additional_information: The additional_information of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """

        self._additional_information = additional_information

    @property
    def owner_reference_id(self):
        """Gets the owner_reference_id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501

        Gets or sets the owner reference identifier.  # noqa: E501

        :return: The owner_reference_id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :rtype: str
        """
        return self._owner_reference_id

    @owner_reference_id.setter
    def owner_reference_id(self, owner_reference_id):
        """Sets the owner_reference_id of this VmOpenApiOrganizationEInvoicing.

        Gets or sets the owner reference identifier.  # noqa: E501

        :param owner_reference_id: The owner_reference_id of this VmOpenApiOrganizationEInvoicing.  # noqa: E501
        :type: str
        """

        self._owner_reference_id = owner_reference_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VmOpenApiOrganizationEInvoicing, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VmOpenApiOrganizationEInvoicing):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
