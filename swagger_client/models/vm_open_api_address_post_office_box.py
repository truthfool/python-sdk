# coding: utf-8

"""
    PTV Open Api version 11

    Here you can see listed all the PTV Open Api methods.  # noqa: E501

    OpenAPI spec version: v11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class VmOpenApiAddressPostOfficeBox(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'postal_code': 'str',
        'post_office': 'list[VmOpenApiLanguageItem]',
        'municipality': 'VmOpenApiMunicipality',
        'additional_information': 'list[VmOpenApiLanguageItem]',
        'post_office_box': 'list[VmOpenApiLanguageItem]'
    }

    attribute_map = {
        'id': 'id',
        'postal_code': 'postalCode',
        'post_office': 'postOffice',
        'municipality': 'municipality',
        'additional_information': 'additionalInformation',
        'post_office_box': 'postOfficeBox'
    }

    def __init__(self, id=None, postal_code=None, post_office=None, municipality=None, additional_information=None, post_office_box=None):  # noqa: E501
        """VmOpenApiAddressPostOfficeBox - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._postal_code = None
        self._post_office = None
        self._municipality = None
        self._additional_information = None
        self._post_office_box = None
        self.discriminator = None
        if id is not None:
            self.id = id
        self.postal_code = postal_code
        if post_office is not None:
            self.post_office = post_office
        if municipality is not None:
            self.municipality = municipality
        if additional_information is not None:
            self.additional_information = additional_information
        self.post_office_box = post_office_box

    @property
    def id(self):
        """Gets the id of this VmOpenApiAddressPostOfficeBox.  # noqa: E501

        Gets or sets the identifier.  # noqa: E501

        :return: The id of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VmOpenApiAddressPostOfficeBox.

        Gets or sets the identifier.  # noqa: E501

        :param id: The id of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def postal_code(self):
        """Gets the postal_code of this VmOpenApiAddressPostOfficeBox.  # noqa: E501

        Postal code, for example 00100.  # noqa: E501

        :return: The postal_code of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this VmOpenApiAddressPostOfficeBox.

        Postal code, for example 00100.  # noqa: E501

        :param postal_code: The postal_code of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: str
        """
        if postal_code is None:
            raise ValueError("Invalid value for `postal_code`, must not be `None`")  # noqa: E501

        self._postal_code = postal_code

    @property
    def post_office(self):
        """Gets the post_office of this VmOpenApiAddressPostOfficeBox.  # noqa: E501

        List of localized Post offices, for example Helsinki, Helsingfors.  # noqa: E501

        :return: The post_office of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._post_office

    @post_office.setter
    def post_office(self, post_office):
        """Sets the post_office of this VmOpenApiAddressPostOfficeBox.

        List of localized Post offices, for example Helsinki, Helsingfors.  # noqa: E501

        :param post_office: The post_office of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """

        self._post_office = post_office

    @property
    def municipality(self):
        """Gets the municipality of this VmOpenApiAddressPostOfficeBox.  # noqa: E501


        :return: The municipality of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: VmOpenApiMunicipality
        """
        return self._municipality

    @municipality.setter
    def municipality(self, municipality):
        """Sets the municipality of this VmOpenApiAddressPostOfficeBox.


        :param municipality: The municipality of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: VmOpenApiMunicipality
        """

        self._municipality = municipality

    @property
    def additional_information(self):
        """Gets the additional_information of this VmOpenApiAddressPostOfficeBox.  # noqa: E501

        Localized list of additional information about the address. (Max.Length: 150).  # noqa: E501

        :return: The additional_information of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this VmOpenApiAddressPostOfficeBox.

        Localized list of additional information about the address. (Max.Length: 150).  # noqa: E501

        :param additional_information: The additional_information of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """

        self._additional_information = additional_information

    @property
    def post_office_box(self):
        """Gets the post_office_box of this VmOpenApiAddressPostOfficeBox.  # noqa: E501

        Post office box like PL 310 (Max.Length: 100).  # noqa: E501

        :return: The post_office_box of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._post_office_box

    @post_office_box.setter
    def post_office_box(self, post_office_box):
        """Sets the post_office_box of this VmOpenApiAddressPostOfficeBox.

        Post office box like PL 310 (Max.Length: 100).  # noqa: E501

        :param post_office_box: The post_office_box of this VmOpenApiAddressPostOfficeBox.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """
        if post_office_box is None:
            raise ValueError("Invalid value for `post_office_box`, must not be `None`")  # noqa: E501

        self._post_office_box = post_office_box

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VmOpenApiAddressPostOfficeBox, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VmOpenApiAddressPostOfficeBox):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
