# coding: utf-8

"""
    PTV Open Api version 11

    Here you can see listed all the PTV Open Api methods.  # noqa: E501

    OpenAPI spec version: v11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V10VmOpenApiPrintableFormChannelIn(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'source_id': 'str',
        'support_emails': 'list[VmOpenApiLanguageItem]',
        'is_visible_for_all': 'bool',
        'channel_id': 'str',
        'version_id': 'str',
        'id': 'str',
        'service_channel_names_with_type': 'list[VmOpenApiLocalizedListItem]',
        'valid_from': 'datetime',
        'valid_to': 'datetime',
        'current_publishing_status': 'str',
        'service_channel_services': 'list[str]',
        'user_name': 'str',
        'form_identifier': 'list[VmOpenApiLanguageItem]',
        'delivery_addresses': 'list[V8VmOpenApiAddressDeliveryIn]',
        'attachments': 'list[VmOpenApiAttachment]',
        'web_pages': 'list[V9VmOpenApiWebPage]',
        'service_hours': 'list[V11VmOpenApiServiceHour]',
        'delete_all_web_pages': 'bool',
        'delete_all_service_hours': 'bool',
        'available_languages': 'list[str]',
        'required_properties_available_languages': 'list[str]',
        'area_type': 'str',
        'areas': 'list[VmOpenApiAreaIn]',
        'support_phones': 'list[V4VmOpenApiPhone]',
        'channel_urls': 'list[VmOpenApiLocalizedListItem]',
        'organization_id': 'str',
        'service_channel_names': 'list[VmOpenApiLanguageItem]',
        'service_channel_descriptions': 'list[VmOpenApiLocalizedListItem]',
        'languages': 'list[str]',
        'publishing_status': 'str',
        'services': 'list[str]',
        'delete_all_delivery_addresses': 'bool',
        'delete_all_channel_urls': 'bool',
        'delete_all_attachments': 'bool',
        'delete_all_support_emails': 'bool',
        'delete_all_support_phones': 'bool',
        'delete_all_form_identifiers': 'bool'
    }

    attribute_map = {
        'source_id': 'sourceId',
        'support_emails': 'supportEmails',
        'is_visible_for_all': 'isVisibleForAll',
        'channel_id': 'channelId',
        'version_id': 'versionId',
        'id': 'id',
        'service_channel_names_with_type': 'serviceChannelNamesWithType',
        'valid_from': 'validFrom',
        'valid_to': 'validTo',
        'current_publishing_status': 'currentPublishingStatus',
        'service_channel_services': 'serviceChannelServices',
        'user_name': 'userName',
        'form_identifier': 'formIdentifier',
        'delivery_addresses': 'deliveryAddresses',
        'attachments': 'attachments',
        'web_pages': 'webPages',
        'service_hours': 'serviceHours',
        'delete_all_web_pages': 'deleteAllWebPages',
        'delete_all_service_hours': 'deleteAllServiceHours',
        'available_languages': 'availableLanguages',
        'required_properties_available_languages': 'requiredPropertiesAvailableLanguages',
        'area_type': 'areaType',
        'areas': 'areas',
        'support_phones': 'supportPhones',
        'channel_urls': 'channelUrls',
        'organization_id': 'organizationId',
        'service_channel_names': 'serviceChannelNames',
        'service_channel_descriptions': 'serviceChannelDescriptions',
        'languages': 'languages',
        'publishing_status': 'publishingStatus',
        'services': 'services',
        'delete_all_delivery_addresses': 'deleteAllDeliveryAddresses',
        'delete_all_channel_urls': 'deleteAllChannelUrls',
        'delete_all_attachments': 'deleteAllAttachments',
        'delete_all_support_emails': 'deleteAllSupportEmails',
        'delete_all_support_phones': 'deleteAllSupportPhones',
        'delete_all_form_identifiers': 'deleteAllFormIdentifiers'
    }

    def __init__(self, source_id=None, support_emails=None, is_visible_for_all=None, channel_id=None, version_id=None, id=None, service_channel_names_with_type=None, valid_from=None, valid_to=None, current_publishing_status=None, service_channel_services=None, user_name=None, form_identifier=None, delivery_addresses=None, attachments=None, web_pages=None, service_hours=None, delete_all_web_pages=None, delete_all_service_hours=None, available_languages=None, required_properties_available_languages=None, area_type=None, areas=None, support_phones=None, channel_urls=None, organization_id=None, service_channel_names=None, service_channel_descriptions=None, languages=None, publishing_status=None, services=None, delete_all_delivery_addresses=None, delete_all_channel_urls=None, delete_all_attachments=None, delete_all_support_emails=None, delete_all_support_phones=None, delete_all_form_identifiers=None):  # noqa: E501
        """V10VmOpenApiPrintableFormChannelIn - a model defined in Swagger"""  # noqa: E501
        self._source_id = None
        self._support_emails = None
        self._is_visible_for_all = None
        self._channel_id = None
        self._version_id = None
        self._id = None
        self._service_channel_names_with_type = None
        self._valid_from = None
        self._valid_to = None
        self._current_publishing_status = None
        self._service_channel_services = None
        self._user_name = None
        self._form_identifier = None
        self._delivery_addresses = None
        self._attachments = None
        self._web_pages = None
        self._service_hours = None
        self._delete_all_web_pages = None
        self._delete_all_service_hours = None
        self._available_languages = None
        self._required_properties_available_languages = None
        self._area_type = None
        self._areas = None
        self._support_phones = None
        self._channel_urls = None
        self._organization_id = None
        self._service_channel_names = None
        self._service_channel_descriptions = None
        self._languages = None
        self._publishing_status = None
        self._services = None
        self._delete_all_delivery_addresses = None
        self._delete_all_channel_urls = None
        self._delete_all_attachments = None
        self._delete_all_support_emails = None
        self._delete_all_support_phones = None
        self._delete_all_form_identifiers = None
        self.discriminator = None
        if source_id is not None:
            self.source_id = source_id
        if support_emails is not None:
            self.support_emails = support_emails
        if is_visible_for_all is not None:
            self.is_visible_for_all = is_visible_for_all
        if channel_id is not None:
            self.channel_id = channel_id
        if version_id is not None:
            self.version_id = version_id
        if id is not None:
            self.id = id
        if service_channel_names_with_type is not None:
            self.service_channel_names_with_type = service_channel_names_with_type
        if valid_from is not None:
            self.valid_from = valid_from
        if valid_to is not None:
            self.valid_to = valid_to
        if current_publishing_status is not None:
            self.current_publishing_status = current_publishing_status
        if service_channel_services is not None:
            self.service_channel_services = service_channel_services
        if user_name is not None:
            self.user_name = user_name
        if form_identifier is not None:
            self.form_identifier = form_identifier
        if delivery_addresses is not None:
            self.delivery_addresses = delivery_addresses
        if attachments is not None:
            self.attachments = attachments
        if web_pages is not None:
            self.web_pages = web_pages
        if service_hours is not None:
            self.service_hours = service_hours
        if delete_all_web_pages is not None:
            self.delete_all_web_pages = delete_all_web_pages
        if delete_all_service_hours is not None:
            self.delete_all_service_hours = delete_all_service_hours
        if available_languages is not None:
            self.available_languages = available_languages
        if required_properties_available_languages is not None:
            self.required_properties_available_languages = required_properties_available_languages
        if area_type is not None:
            self.area_type = area_type
        if areas is not None:
            self.areas = areas
        if support_phones is not None:
            self.support_phones = support_phones
        self.channel_urls = channel_urls
        self.organization_id = organization_id
        self.service_channel_names = service_channel_names
        self.service_channel_descriptions = service_channel_descriptions
        self.languages = languages
        self.publishing_status = publishing_status
        if services is not None:
            self.services = services
        if delete_all_delivery_addresses is not None:
            self.delete_all_delivery_addresses = delete_all_delivery_addresses
        if delete_all_channel_urls is not None:
            self.delete_all_channel_urls = delete_all_channel_urls
        if delete_all_attachments is not None:
            self.delete_all_attachments = delete_all_attachments
        if delete_all_support_emails is not None:
            self.delete_all_support_emails = delete_all_support_emails
        if delete_all_support_phones is not None:
            self.delete_all_support_phones = delete_all_support_phones
        if delete_all_form_identifiers is not None:
            self.delete_all_form_identifiers = delete_all_form_identifiers

    @property
    def source_id(self):
        """Gets the source_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        External system identifier for this service channel. User needs to be logged in to be able to get/set value.  # noqa: E501

        :return: The source_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this V10VmOpenApiPrintableFormChannelIn.

        External system identifier for this service channel. User needs to be logged in to be able to get/set value.  # noqa: E501

        :param source_id: The source_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._source_id = source_id

    @property
    def support_emails(self):
        """Gets the support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of support email addresses for the service channel. (Max.Length: 100).  # noqa: E501

        :return: The support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._support_emails

    @support_emails.setter
    def support_emails(self, support_emails):
        """Sets the support_emails of this V10VmOpenApiPrintableFormChannelIn.

        List of support email addresses for the service channel. (Max.Length: 100).  # noqa: E501

        :param support_emails: The support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """

        self._support_emails = support_emails

    @property
    def is_visible_for_all(self):
        """Gets the is_visible_for_all of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Indicates if channel can be used (referenced within services) by other users from other organizations.  # noqa: E501

        :return: The is_visible_for_all of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._is_visible_for_all

    @is_visible_for_all.setter
    def is_visible_for_all(self, is_visible_for_all):
        """Sets the is_visible_for_all of this V10VmOpenApiPrintableFormChannelIn.

        Indicates if channel can be used (referenced within services) by other users from other organizations.  # noqa: E501

        :param is_visible_for_all: The is_visible_for_all of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._is_visible_for_all = is_visible_for_all

    @property
    def channel_id(self):
        """Gets the channel_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Gets or sets the special channel identifier.  # noqa: E501

        :return: The channel_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this V10VmOpenApiPrintableFormChannelIn.

        Gets or sets the special channel identifier.  # noqa: E501

        :param channel_id: The channel_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._channel_id = channel_id

    @property
    def version_id(self):
        """Gets the version_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        The identifier for current version.  # noqa: E501

        :return: The version_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this V10VmOpenApiPrintableFormChannelIn.

        The identifier for current version.  # noqa: E501

        :param version_id: The version_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._version_id = version_id

    @property
    def id(self):
        """Gets the id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        PTV identifier for the service channel.  # noqa: E501

        :return: The id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V10VmOpenApiPrintableFormChannelIn.

        PTV identifier for the service channel.  # noqa: E501

        :param id: The id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def service_channel_names_with_type(self):
        """Gets the service_channel_names_with_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Localized list of service channel names.  # noqa: E501

        :return: The service_channel_names_with_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLocalizedListItem]
        """
        return self._service_channel_names_with_type

    @service_channel_names_with_type.setter
    def service_channel_names_with_type(self, service_channel_names_with_type):
        """Sets the service_channel_names_with_type of this V10VmOpenApiPrintableFormChannelIn.

        Localized list of service channel names.  # noqa: E501

        :param service_channel_names_with_type: The service_channel_names_with_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLocalizedListItem]
        """

        self._service_channel_names_with_type = service_channel_names_with_type

    @property
    def valid_from(self):
        """Gets the valid_from of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Date when item should be published.  # noqa: E501

        :return: The valid_from of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: datetime
        """
        return self._valid_from

    @valid_from.setter
    def valid_from(self, valid_from):
        """Sets the valid_from of this V10VmOpenApiPrintableFormChannelIn.

        Date when item should be published.  # noqa: E501

        :param valid_from: The valid_from of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: datetime
        """

        self._valid_from = valid_from

    @property
    def valid_to(self):
        """Gets the valid_to of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Date when item should be archived.  # noqa: E501

        :return: The valid_to of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: datetime
        """
        return self._valid_to

    @valid_to.setter
    def valid_to(self, valid_to):
        """Sets the valid_to of this V10VmOpenApiPrintableFormChannelIn.

        Date when item should be archived.  # noqa: E501

        :param valid_to: The valid_to of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: datetime
        """

        self._valid_to = valid_to

    @property
    def current_publishing_status(self):
        """Gets the current_publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Current version publishing status.  # noqa: E501

        :return: The current_publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._current_publishing_status

    @current_publishing_status.setter
    def current_publishing_status(self, current_publishing_status):
        """Sets the current_publishing_status of this V10VmOpenApiPrintableFormChannelIn.

        Current version publishing status.  # noqa: E501

        :param current_publishing_status: The current_publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._current_publishing_status = current_publishing_status

    @property
    def service_channel_services(self):
        """Gets the service_channel_services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Internal property for adding service relations for a service channel.  # noqa: E501

        :return: The service_channel_services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[str]
        """
        return self._service_channel_services

    @service_channel_services.setter
    def service_channel_services(self, service_channel_services):
        """Sets the service_channel_services of this V10VmOpenApiPrintableFormChannelIn.

        Internal property for adding service relations for a service channel.  # noqa: E501

        :param service_channel_services: The service_channel_services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[str]
        """

        self._service_channel_services = service_channel_services

    @property
    def user_name(self):
        """Gets the user_name of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        User name.  # noqa: E501

        :return: The user_name of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this V10VmOpenApiPrintableFormChannelIn.

        User name.  # noqa: E501

        :param user_name: The user_name of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def form_identifier(self):
        """Gets the form_identifier of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of localized form identifiers. One per language. (Max.Length: 100).  # noqa: E501

        :return: The form_identifier of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._form_identifier

    @form_identifier.setter
    def form_identifier(self, form_identifier):
        """Sets the form_identifier of this V10VmOpenApiPrintableFormChannelIn.

        List of localized form identifiers. One per language. (Max.Length: 100).  # noqa: E501

        :param form_identifier: The form_identifier of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """

        self._form_identifier = form_identifier

    @property
    def delivery_addresses(self):
        """Gets the delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Gets or sets the delivery addresses.  # noqa: E501

        :return: The delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[V8VmOpenApiAddressDeliveryIn]
        """
        return self._delivery_addresses

    @delivery_addresses.setter
    def delivery_addresses(self, delivery_addresses):
        """Sets the delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.

        Gets or sets the delivery addresses.  # noqa: E501

        :param delivery_addresses: The delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[V8VmOpenApiAddressDeliveryIn]
        """

        self._delivery_addresses = delivery_addresses

    @property
    def attachments(self):
        """Gets the attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of attachments.  # noqa: E501

        :return: The attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiAttachment]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this V10VmOpenApiPrintableFormChannelIn.

        List of attachments.  # noqa: E501

        :param attachments: The attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiAttachment]
        """

        self._attachments = attachments

    @property
    def web_pages(self):
        """Gets the web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of service channel web pages.  # noqa: E501

        :return: The web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[V9VmOpenApiWebPage]
        """
        return self._web_pages

    @web_pages.setter
    def web_pages(self, web_pages):
        """Sets the web_pages of this V10VmOpenApiPrintableFormChannelIn.

        List of service channel web pages.  # noqa: E501

        :param web_pages: The web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[V9VmOpenApiWebPage]
        """

        self._web_pages = web_pages

    @property
    def service_hours(self):
        """Gets the service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of service channel service hours.  # noqa: E501

        :return: The service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[V11VmOpenApiServiceHour]
        """
        return self._service_hours

    @service_hours.setter
    def service_hours(self, service_hours):
        """Sets the service_hours of this V10VmOpenApiPrintableFormChannelIn.

        List of service channel service hours.  # noqa: E501

        :param service_hours: The service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[V11VmOpenApiServiceHour]
        """

        self._service_hours = service_hours

    @property
    def delete_all_web_pages(self):
        """Gets the delete_all_web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing web pages for the service channel. The WebPages collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_web_pages

    @delete_all_web_pages.setter
    def delete_all_web_pages(self, delete_all_web_pages):
        """Sets the delete_all_web_pages of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing web pages for the service channel. The WebPages collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_web_pages: The delete_all_web_pages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_web_pages = delete_all_web_pages

    @property
    def delete_all_service_hours(self):
        """Gets the delete_all_service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing service hours for the service channel. The ServiceHours collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_service_hours

    @delete_all_service_hours.setter
    def delete_all_service_hours(self, delete_all_service_hours):
        """Sets the delete_all_service_hours of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing service hours for the service channel. The ServiceHours collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_service_hours: The delete_all_service_hours of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_service_hours = delete_all_service_hours

    @property
    def available_languages(self):
        """Gets the available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Gets or sets available languages  # noqa: E501

        :return: The available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[str]
        """
        return self._available_languages

    @available_languages.setter
    def available_languages(self, available_languages):
        """Sets the available_languages of this V10VmOpenApiPrintableFormChannelIn.

        Gets or sets available languages  # noqa: E501

        :param available_languages: The available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[str]
        """

        self._available_languages = available_languages

    @property
    def required_properties_available_languages(self):
        """Gets the required_properties_available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Internal property to check the languages within required lists: ServiceChannelNames, ServiceChannelDescriptions  and ChannelUrls lists.  # noqa: E501

        :return: The required_properties_available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[str]
        """
        return self._required_properties_available_languages

    @required_properties_available_languages.setter
    def required_properties_available_languages(self, required_properties_available_languages):
        """Sets the required_properties_available_languages of this V10VmOpenApiPrintableFormChannelIn.

        Internal property to check the languages within required lists: ServiceChannelNames, ServiceChannelDescriptions  and ChannelUrls lists.  # noqa: E501

        :param required_properties_available_languages: The required_properties_available_languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[str]
        """

        self._required_properties_available_languages = required_properties_available_languages

    @property
    def area_type(self):
        """Gets the area_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Area type. Possible values are: Nationwide, NationwideExceptAlandIslands or LimitedType.  # noqa: E501

        :return: The area_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._area_type

    @area_type.setter
    def area_type(self, area_type):
        """Sets the area_type of this V10VmOpenApiPrintableFormChannelIn.

        Area type. Possible values are: Nationwide, NationwideExceptAlandIslands or LimitedType.  # noqa: E501

        :param area_type: The area_type of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """

        self._area_type = area_type

    @property
    def areas(self):
        """Gets the areas of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of areas. List can contain different types of areas.  # noqa: E501

        :return: The areas of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiAreaIn]
        """
        return self._areas

    @areas.setter
    def areas(self, areas):
        """Sets the areas of this V10VmOpenApiPrintableFormChannelIn.

        List of areas. List can contain different types of areas.  # noqa: E501

        :param areas: The areas of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiAreaIn]
        """

        self._areas = areas

    @property
    def support_phones(self):
        """Gets the support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of support phone numbers for the service channel.  # noqa: E501

        :return: The support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[V4VmOpenApiPhone]
        """
        return self._support_phones

    @support_phones.setter
    def support_phones(self, support_phones):
        """Sets the support_phones of this V10VmOpenApiPrintableFormChannelIn.

        List of support phone numbers for the service channel.  # noqa: E501

        :param support_phones: The support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[V4VmOpenApiPhone]
        """

        self._support_phones = support_phones

    @property
    def channel_urls(self):
        """Gets the channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of localized urls. Possible type values are: PDF, DOC, Excel.  # noqa: E501

        :return: The channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLocalizedListItem]
        """
        return self._channel_urls

    @channel_urls.setter
    def channel_urls(self, channel_urls):
        """Sets the channel_urls of this V10VmOpenApiPrintableFormChannelIn.

        List of localized urls. Possible type values are: PDF, DOC, Excel.  # noqa: E501

        :param channel_urls: The channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLocalizedListItem]
        """
        if channel_urls is None:
            raise ValueError("Invalid value for `channel_urls`, must not be `None`")  # noqa: E501

        self._channel_urls = channel_urls

    @property
    def organization_id(self):
        """Gets the organization_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        PTV organization identifier of organization responsible for this channel.  # noqa: E501

        :return: The organization_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this V10VmOpenApiPrintableFormChannelIn.

        PTV organization identifier of organization responsible for this channel.  # noqa: E501

        :param organization_id: The organization_id of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """
        if organization_id is None:
            raise ValueError("Invalid value for `organization_id`, must not be `None`")  # noqa: E501

        self._organization_id = organization_id

    @property
    def service_channel_names(self):
        """Gets the service_channel_names of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of localized service channel names.  # noqa: E501

        :return: The service_channel_names of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLanguageItem]
        """
        return self._service_channel_names

    @service_channel_names.setter
    def service_channel_names(self, service_channel_names):
        """Sets the service_channel_names of this V10VmOpenApiPrintableFormChannelIn.

        List of localized service channel names.  # noqa: E501

        :param service_channel_names: The service_channel_names of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLanguageItem]
        """
        if service_channel_names is None:
            raise ValueError("Invalid value for `service_channel_names`, must not be `None`")  # noqa: E501

        self._service_channel_names = service_channel_names

    @property
    def service_channel_descriptions(self):
        """Gets the service_channel_descriptions of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of localized service channel descriptions. Possible type values are: Description, Summary.  # noqa: E501

        :return: The service_channel_descriptions of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[VmOpenApiLocalizedListItem]
        """
        return self._service_channel_descriptions

    @service_channel_descriptions.setter
    def service_channel_descriptions(self, service_channel_descriptions):
        """Sets the service_channel_descriptions of this V10VmOpenApiPrintableFormChannelIn.

        List of localized service channel descriptions. Possible type values are: Description, Summary.  # noqa: E501

        :param service_channel_descriptions: The service_channel_descriptions of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[VmOpenApiLocalizedListItem]
        """
        if service_channel_descriptions is None:
            raise ValueError("Invalid value for `service_channel_descriptions`, must not be `None`")  # noqa: E501

        self._service_channel_descriptions = service_channel_descriptions

    @property
    def languages(self):
        """Gets the languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of languages the service channel is available in (two letter language code).  # noqa: E501

        :return: The languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this V10VmOpenApiPrintableFormChannelIn.

        List of languages the service channel is available in (two letter language code).  # noqa: E501

        :param languages: The languages of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[str]
        """
        if languages is None:
            raise ValueError("Invalid value for `languages`, must not be `None`")  # noqa: E501

        self._languages = languages

    @property
    def publishing_status(self):
        """Gets the publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Service channel publishing status. Values: Draft or Published.  # noqa: E501

        :return: The publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: str
        """
        return self._publishing_status

    @publishing_status.setter
    def publishing_status(self, publishing_status):
        """Sets the publishing_status of this V10VmOpenApiPrintableFormChannelIn.

        Service channel publishing status. Values: Draft or Published.  # noqa: E501

        :param publishing_status: The publishing_status of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: str
        """
        if publishing_status is None:
            raise ValueError("Invalid value for `publishing_status`, must not be `None`")  # noqa: E501

        self._publishing_status = publishing_status

    @property
    def services(self):
        """Gets the services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        List of related services (GUID).  # noqa: E501

        :return: The services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: list[str]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this V10VmOpenApiPrintableFormChannelIn.

        List of related services (GUID).  # noqa: E501

        :param services: The services of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: list[str]
        """

        self._services = services

    @property
    def delete_all_delivery_addresses(self):
        """Gets the delete_all_delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing delivery addresses for the service channel. The DeliveryAddresses should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_delivery_addresses

    @delete_all_delivery_addresses.setter
    def delete_all_delivery_addresses(self, delete_all_delivery_addresses):
        """Sets the delete_all_delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing delivery addresses for the service channel. The DeliveryAddresses should be empty when this property is set to true.  # noqa: E501

        :param delete_all_delivery_addresses: The delete_all_delivery_addresses of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_delivery_addresses = delete_all_delivery_addresses

    @property
    def delete_all_channel_urls(self):
        """Gets the delete_all_channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing channel urls for the service channel. The ChannelUrls collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_channel_urls

    @delete_all_channel_urls.setter
    def delete_all_channel_urls(self, delete_all_channel_urls):
        """Sets the delete_all_channel_urls of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing channel urls for the service channel. The ChannelUrls collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_channel_urls: The delete_all_channel_urls of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_channel_urls = delete_all_channel_urls

    @property
    def delete_all_attachments(self):
        """Gets the delete_all_attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing attachments for the service channel. The Attachments collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_attachments

    @delete_all_attachments.setter
    def delete_all_attachments(self, delete_all_attachments):
        """Sets the delete_all_attachments of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing attachments for the service channel. The Attachments collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_attachments: The delete_all_attachments of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_attachments = delete_all_attachments

    @property
    def delete_all_support_emails(self):
        """Gets the delete_all_support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing support email addresses for the service channel. The SupportEmails collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_support_emails

    @delete_all_support_emails.setter
    def delete_all_support_emails(self, delete_all_support_emails):
        """Sets the delete_all_support_emails of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing support email addresses for the service channel. The SupportEmails collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_support_emails: The delete_all_support_emails of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_support_emails = delete_all_support_emails

    @property
    def delete_all_support_phones(self):
        """Gets the delete_all_support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing support phone numbers for the service channel. The SupportPhones collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_support_phones

    @delete_all_support_phones.setter
    def delete_all_support_phones(self, delete_all_support_phones):
        """Sets the delete_all_support_phones of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing support phone numbers for the service channel. The SupportPhones collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_support_phones: The delete_all_support_phones of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_support_phones = delete_all_support_phones

    @property
    def delete_all_form_identifiers(self):
        """Gets the delete_all_form_identifiers of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501

        Set to true to delete all existing form identifiers for the service channel. The form identifiers collection should be empty when this property is set to true.  # noqa: E501

        :return: The delete_all_form_identifiers of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :rtype: bool
        """
        return self._delete_all_form_identifiers

    @delete_all_form_identifiers.setter
    def delete_all_form_identifiers(self, delete_all_form_identifiers):
        """Sets the delete_all_form_identifiers of this V10VmOpenApiPrintableFormChannelIn.

        Set to true to delete all existing form identifiers for the service channel. The form identifiers collection should be empty when this property is set to true.  # noqa: E501

        :param delete_all_form_identifiers: The delete_all_form_identifiers of this V10VmOpenApiPrintableFormChannelIn.  # noqa: E501
        :type: bool
        """

        self._delete_all_form_identifiers = delete_all_form_identifiers

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V10VmOpenApiPrintableFormChannelIn, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V10VmOpenApiPrintableFormChannelIn):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
